
########################################
# Macros
########################################

#[gcode_macro UNLOAD_FILAMENT]
[gcode_macro filament_wyladuj]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(210, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}
  {% endif %}
  M117 Unloading filament...
  # Extract filament to cold end area 
  G0 E-5 F1000
  # Wait for three seconds
  G4 P3000
  # Push back the filament to smash any stringing 
  G0 E5 F1000
  # Extract back fast in to the cold zone 
  G0 E-35 F5200
  # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
  G0 E-100 F800
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

#[gcode_macro LOAD_FILAMENT]
[gcode_macro filament_laduj]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    M104 S{params.TEMP|default(210, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(210, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G0 E70 F600
  # Wait a secod
  G4 P1000
  # Purge
  G0 E70 F200
  # Wait for purge to complete
  M400e
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state


################################################################################
# General #
###############################################################################
[gcode_macro PRINT_START]
#[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    M104 S150 ; set extruder temp 150c for auto bed leveling
    M140 S{BED_TEMP} ; set bed temp
    M190 S{BED_TEMP} ; wait for bed temp
    M104 S{EXTRUDER_TEMP} ; set extruder temp
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    
    G28 ; home all
    CALIBRATE_Z
    #BED_MESH_CALIBRATE ; auto bed levelling
#    Z_TILT_ADJUST
#    BED_MESH_CLEAR
#    BED_MESH_CALIBRATE

    G1 Z5 F240 ; lower bed before moving
    
    G92 E0 ;Reset Extruder
    G1 Z2.0 F1000 ;Move Z Axis up

    G1 X60 Y7 Z0.2 F5000.0 ; bylo Y5 ale dotyka paskow wiec trzeba cofnac albo przesunac uklad wspolrzednych o ok 6-7 mm
    G1 X100 E12.5 F1000 

    G92 E0 ;Reset Extruder
    G1 Z1.0 F1000 ;Move Z Axis up

[gcode_macro PRINT_END]
#[gcode_macro END_PRINT]
gcode:
  M400                           ; wait for moves to finish
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  G90 ;Absolute positioning
  G28 X Y ;Present print
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  M84 X Y Z E ;Disable all steppers but rowniez Z


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_minimum.x|float + 10.0 %}
    {% set y_park = printer.toolhead.axis_minimum.y|float + 10.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[output_pin LED]
# pin PB0 pin od grzalki hotendu 1
#   Lighting Control
pin: P2.4 #HE1 hotend 1  a HE0 to 2.7
pwm: true
shutdown_value:0
value=0
cycle_time:0.01
scale: 100

[gcode_macro LED_off]
gcode:
    SET_PIN PIN=LED VALUE=0

[gcode_macro LED_on]
gcode:
    SET_PIN PIN=LED VALUE=100

[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=default
 G1 X10 Y10 Z5 F4000

[idle_timeout]
gcode:
    TURN_OFF_HEATERS
    M84; disable steppers
    #timeout: 1800;30 min

#[gcode_macro center_nozzle]
#gcode:
#    lift_z
#    G90
#    G0 X185 Y189 F6000

[gcode_macro lift_z]
gcode:
    G91
    G0 Z10 F2000
    G90

# prime the nozzle
[gcode_macro PRIME_LINE]
gcode:
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis
    G1 Z2.0 F1000 ;Move Z Axis up
    # move to prime position
    G1 X20 Y30 Z0.28 F5000.0 ;Move to start position
    G1 X20 Y190.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X22 Y190.0 Z0.28 F5000.0 ;Move to side a little
    G1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 E-2 F500 # extract a little
    # G1 E-150 F500 # the E is the length of the bowden tube (420mm) + 100 mm.
    G92 E0.0
    G1 Z2.0 F1000 ;Move Z Axis up
    lift_z


########################################
# Start M600 Macro - https://www.reddit.com/r/klippers/comments/f614xm/help_getting_m600_to_work_for_mid_print_filament/fi2n3yj/?context=3
#####################################################################
# Filament Change
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
# to makro jest z najnowszego githuba - sprawdzic je trzeba.

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state

# load filament do M600 recznie wyzwalany

# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead # lcd print
    G91 # realative positioning
    G1 Z5 F300 # move up 5 mm
    G90 # abosolute position
    G1 X12 Y10 F4000 # move to park position
    RESTORE_GCODE_STATE name=parking

########################################
# End M600 Macro
########################################

[gcode_macro LOW_TEMP_CHECK]
gcode: 
    {% set T = params.T|default(210) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M117 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}


########################## Filament Sensor Logic ##########################
[filament_switch_sensor RunoutSensor]
switch_pin: P1.26 # Pin E0det filament jest to trigered (close) brak to (open) - bez wykrzyknika - aby odwrocic trzeba ! zanegowac NEGUJE by RUN out byl trigered.
# Without M600 macro (uncomment the line below and comment the two lines in the "With Filament change M600 macro"
pause_on_runout: true
# With M600 Filament change macro
#pause_on_runout: false
runout_gcode: M600

#####################################################################
# 	Filament change macro M600
#####################################################################

# tu juz moje makra
########################################
# przycioski do sensora Orbiter z Macro
########################################

#[gcode_button my_gcode_button]
#pin: PA4 #MT_DET czujnik filamentu 0
#   The pin on which the button is connected. This parameter must be
#   provided.
#analog_pullup_resistor:
#   The pullup resistance (in Ohms) when analog_range is specified.
#   The default is 4700 ohms.
#press_gcode: filament_laduj


#[gcode_button my_gcode_button]
#pin: PE6 #MT_DET1 czujnik filamentu 1
#   The pin on which the button is connected. This parameter must be
#   provided.
#analog_pullup_resistor:
#   The pullup resistance (in Ohms) when analog_range is specified.
#   The default is 4700 ohms.
#press_gcode: filament_wyladuj

[gcode_shell_command backup_cfg]
command: sh /home/pi/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_arcs]
resolution: 0.1

[gcode_macro m201]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set accel = (params.X|default(params.Y)|float,
                    params.Y|default(params.X)|float)|min %}
      SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel * 0.5}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m203]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY={speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set corner_speed = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={corner_speed}
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro M900]
gcode:
      SET_PRESSURE_ADVANCE ADVANCE={params.K}


